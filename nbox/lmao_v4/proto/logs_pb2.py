# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: logs.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
try:
  from gen.proto import tracker_pb2 as tracker__pb2
except ImportError:
  from nbox.lmao_v4.proto import tracker_pb2 as tracker__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\nlogs.proto\x12\x07lmao_pb\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\rtracker.proto\"\xdd\x01\n\nTrackerLog\x12\x14\n\x0cworkspace_id\x18\x01 \x01(\t\x12\x12\n\nproject_id\x18\x02 \x01(\t\x12\x12\n\ntracker_id\x18\x03 \x01(\t\x12\x13\n\x0bnumber_keys\x18\x06 \x03(\t\x12\x15\n\rnumber_values\x18\x07 \x03(\x02\x12\x11\n\ttext_keys\x18\x08 \x03(\t\x12\x13\n\x0btext_values\x18\t \x03(\t\x12-\n\ttimestamp\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0e\n\x06log_id\x18\x05 \x01(\t\"\x1e\n\x0cTrackerLogId\x12\x0e\n\x06log_id\x18\x01 \x01(\t\"\xa4\x02\n\x0cRecordColumn\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x32\n\nvalue_type\x18\x02 \x01(\x0e\x32\x1e.lmao_pb.RecordColumn.DataType\x12.\n\x04rows\x18\x03 \x03(\x0b\x32 .lmao_pb.RecordColumn.RecordItem\x1at\n\nRecordItem\x12\t\n\x01x\x18\x01 \x01(\x03\x12-\n\ttimestamp\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0e\n\x06number\x18\x03 \x01(\x02\x12\x0c\n\x04text\x18\x04 \x01(\t\x12\x0e\n\x06log_id\x18\x05 \x01(\t\"-\n\x08\x44\x61taType\x12\t\n\x05UNSET\x10\x00\x12\n\n\x06NUMBER\x10\x01\x12\n\n\x06STRING\x10\x02\"G\n\tRecordRow\x12\x12\n\ntracker_id\x18\x01 \x01(\t\x12&\n\x07\x63olumns\x18\x02 \x03(\x0b\x32\x15.lmao_pb.RecordColumn\"\xd6\x01\n\x11TrackerLogRequest\x12\x14\n\x0cworkspace_id\x18\x01 \x01(\t\x12\x12\n\nproject_id\x18\x02 \x01(\t\x12\x12\n\ntracker_id\x18\x03 \x01(\t\x12\x0c\n\x04keys\x18\x04 \x03(\t\x12)\n\x05\x61\x66ter\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12*\n\x06\x62\x65\x66ore\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\r\n\x05limit\x18\x07 \x01(\x05\x12\x0f\n\x07log_ids\x18\x08 \x03(\t\"9\n\x12TrackerLogResponse\x12#\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32\x15.lmao_pb.RecordColumn\"\x8d\x01\n\x16GetTrackerTableRequest\x12\x14\n\x0cworkspace_id\x18\x01 \x01(\t\x12\x12\n\nproject_id\x18\x02 \x01(\t\x12*\n\x0ctracker_type\x18\x03 \x01(\x0e\x32\x14.lmao_pb.TrackerType\x12\x0e\n\x06offset\x18\x04 \x01(\x05\x12\r\n\x05limit\x18\x05 \x01(\x05\"7\n\x0cTrackerTable\x12\'\n\x0brecord_rows\x18\x01 \x03(\x0b\x32\x12.lmao_pb.RecordRow\"\x95\x03\n\x15TrackerDatasetRequest\x12\x11\n\trelics_id\x18\x01 \x01(\t\x12\x13\n\x0brelics_path\x18\x02 \x01(\t\x12\x42\n\rexport_format\x18\x03 \x01(\x0e\x32+.lmao_pb.TrackerDatasetRequest.ExportFormat\x12\x31\n\x0blog_request\x18\n \x01(\x0b\x32\x1a.lmao_pb.TrackerLogRequestH\x00\x12(\n\x05query\x18\x0b \x01(\x0b\x32\x17.google.protobuf.StructH\x00\x12\x38\n\x07log_ids\x18\x0c \x01(\x0b\x32%.lmao_pb.TrackerDatasetRequest.LogIdsH\x00\x12&\n\x05\x65xtra\x18\x14 \x01(\x0b\x32\x17.google.protobuf.Struct\x1a\x19\n\x06LogIds\x12\x0f\n\x07log_ids\x18\x01 \x03(\t\"\'\n\x0c\x45xportFormat\x12\x0c\n\x08UNSET_EF\x10\x00\x12\t\n\x05JSONL\x10\x01\x42\r\n\x0bquery_style\"S\n\x0eTrackerDataset\x12\x12\n\ndataset_id\x18\x01 \x01(\t\x12-\n\tcompleted\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.BoolValueB/Z-github.com/NimbleBoxAI/nimblebox-lmao/lmao_pbb\x06proto3')



_TRACKERLOG = DESCRIPTOR.message_types_by_name['TrackerLog']
_TRACKERLOGID = DESCRIPTOR.message_types_by_name['TrackerLogId']
_RECORDCOLUMN = DESCRIPTOR.message_types_by_name['RecordColumn']
_RECORDCOLUMN_RECORDITEM = _RECORDCOLUMN.nested_types_by_name['RecordItem']
_RECORDROW = DESCRIPTOR.message_types_by_name['RecordRow']
_TRACKERLOGREQUEST = DESCRIPTOR.message_types_by_name['TrackerLogRequest']
_TRACKERLOGRESPONSE = DESCRIPTOR.message_types_by_name['TrackerLogResponse']
_GETTRACKERTABLEREQUEST = DESCRIPTOR.message_types_by_name['GetTrackerTableRequest']
_TRACKERTABLE = DESCRIPTOR.message_types_by_name['TrackerTable']
_TRACKERDATASETREQUEST = DESCRIPTOR.message_types_by_name['TrackerDatasetRequest']
_TRACKERDATASETREQUEST_LOGIDS = _TRACKERDATASETREQUEST.nested_types_by_name['LogIds']
_TRACKERDATASET = DESCRIPTOR.message_types_by_name['TrackerDataset']
_RECORDCOLUMN_DATATYPE = _RECORDCOLUMN.enum_types_by_name['DataType']
_TRACKERDATASETREQUEST_EXPORTFORMAT = _TRACKERDATASETREQUEST.enum_types_by_name['ExportFormat']
TrackerLog = _reflection.GeneratedProtocolMessageType('TrackerLog', (_message.Message,), {
  'DESCRIPTOR' : _TRACKERLOG,
  '__module__' : 'logs_pb2'
  # @@protoc_insertion_point(class_scope:lmao_pb.TrackerLog)
  })
_sym_db.RegisterMessage(TrackerLog)

TrackerLogId = _reflection.GeneratedProtocolMessageType('TrackerLogId', (_message.Message,), {
  'DESCRIPTOR' : _TRACKERLOGID,
  '__module__' : 'logs_pb2'
  # @@protoc_insertion_point(class_scope:lmao_pb.TrackerLogId)
  })
_sym_db.RegisterMessage(TrackerLogId)

RecordColumn = _reflection.GeneratedProtocolMessageType('RecordColumn', (_message.Message,), {

  'RecordItem' : _reflection.GeneratedProtocolMessageType('RecordItem', (_message.Message,), {
    'DESCRIPTOR' : _RECORDCOLUMN_RECORDITEM,
    '__module__' : 'logs_pb2'
    # @@protoc_insertion_point(class_scope:lmao_pb.RecordColumn.RecordItem)
    })
  ,
  'DESCRIPTOR' : _RECORDCOLUMN,
  '__module__' : 'logs_pb2'
  # @@protoc_insertion_point(class_scope:lmao_pb.RecordColumn)
  })
_sym_db.RegisterMessage(RecordColumn)
_sym_db.RegisterMessage(RecordColumn.RecordItem)

RecordRow = _reflection.GeneratedProtocolMessageType('RecordRow', (_message.Message,), {
  'DESCRIPTOR' : _RECORDROW,
  '__module__' : 'logs_pb2'
  # @@protoc_insertion_point(class_scope:lmao_pb.RecordRow)
  })
_sym_db.RegisterMessage(RecordRow)

TrackerLogRequest = _reflection.GeneratedProtocolMessageType('TrackerLogRequest', (_message.Message,), {
  'DESCRIPTOR' : _TRACKERLOGREQUEST,
  '__module__' : 'logs_pb2'
  # @@protoc_insertion_point(class_scope:lmao_pb.TrackerLogRequest)
  })
_sym_db.RegisterMessage(TrackerLogRequest)

TrackerLogResponse = _reflection.GeneratedProtocolMessageType('TrackerLogResponse', (_message.Message,), {
  'DESCRIPTOR' : _TRACKERLOGRESPONSE,
  '__module__' : 'logs_pb2'
  # @@protoc_insertion_point(class_scope:lmao_pb.TrackerLogResponse)
  })
_sym_db.RegisterMessage(TrackerLogResponse)

GetTrackerTableRequest = _reflection.GeneratedProtocolMessageType('GetTrackerTableRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTRACKERTABLEREQUEST,
  '__module__' : 'logs_pb2'
  # @@protoc_insertion_point(class_scope:lmao_pb.GetTrackerTableRequest)
  })
_sym_db.RegisterMessage(GetTrackerTableRequest)

TrackerTable = _reflection.GeneratedProtocolMessageType('TrackerTable', (_message.Message,), {
  'DESCRIPTOR' : _TRACKERTABLE,
  '__module__' : 'logs_pb2'
  # @@protoc_insertion_point(class_scope:lmao_pb.TrackerTable)
  })
_sym_db.RegisterMessage(TrackerTable)

TrackerDatasetRequest = _reflection.GeneratedProtocolMessageType('TrackerDatasetRequest', (_message.Message,), {

  'LogIds' : _reflection.GeneratedProtocolMessageType('LogIds', (_message.Message,), {
    'DESCRIPTOR' : _TRACKERDATASETREQUEST_LOGIDS,
    '__module__' : 'logs_pb2'
    # @@protoc_insertion_point(class_scope:lmao_pb.TrackerDatasetRequest.LogIds)
    })
  ,
  'DESCRIPTOR' : _TRACKERDATASETREQUEST,
  '__module__' : 'logs_pb2'
  # @@protoc_insertion_point(class_scope:lmao_pb.TrackerDatasetRequest)
  })
_sym_db.RegisterMessage(TrackerDatasetRequest)
_sym_db.RegisterMessage(TrackerDatasetRequest.LogIds)

TrackerDataset = _reflection.GeneratedProtocolMessageType('TrackerDataset', (_message.Message,), {
  'DESCRIPTOR' : _TRACKERDATASET,
  '__module__' : 'logs_pb2'
  # @@protoc_insertion_point(class_scope:lmao_pb.TrackerDataset)
  })
_sym_db.RegisterMessage(TrackerDataset)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z-github.com/NimbleBoxAI/nimblebox-lmao/lmao_pb'
  _TRACKERLOG._serialized_start=134
  _TRACKERLOG._serialized_end=355
  _TRACKERLOGID._serialized_start=357
  _TRACKERLOGID._serialized_end=387
  _RECORDCOLUMN._serialized_start=390
  _RECORDCOLUMN._serialized_end=682
  _RECORDCOLUMN_RECORDITEM._serialized_start=519
  _RECORDCOLUMN_RECORDITEM._serialized_end=635
  _RECORDCOLUMN_DATATYPE._serialized_start=637
  _RECORDCOLUMN_DATATYPE._serialized_end=682
  _RECORDROW._serialized_start=684
  _RECORDROW._serialized_end=755
  _TRACKERLOGREQUEST._serialized_start=758
  _TRACKERLOGREQUEST._serialized_end=972
  _TRACKERLOGRESPONSE._serialized_start=974
  _TRACKERLOGRESPONSE._serialized_end=1031
  _GETTRACKERTABLEREQUEST._serialized_start=1034
  _GETTRACKERTABLEREQUEST._serialized_end=1175
  _TRACKERTABLE._serialized_start=1177
  _TRACKERTABLE._serialized_end=1232
  _TRACKERDATASETREQUEST._serialized_start=1235
  _TRACKERDATASETREQUEST._serialized_end=1640
  _TRACKERDATASETREQUEST_LOGIDS._serialized_start=1559
  _TRACKERDATASETREQUEST_LOGIDS._serialized_end=1584
  _TRACKERDATASETREQUEST_EXPORTFORMAT._serialized_start=1586
  _TRACKERDATASETREQUEST_EXPORTFORMAT._serialized_end=1625
  _TRACKERDATASET._serialized_start=1642
  _TRACKERDATASET._serialized_end=1725
# @@protoc_insertion_point(module_scope)
